local this = nil
require "LuaGreenDragonDoc.lua"
local print = Debugger.LogWarning

local m_Go
local m_closeBtn
local m_rankDataTab = {}
local m_scrollView
local m_wrapContent
local m_noTipsGo
local m_rankRewardRowTab = {}

LuaGreenDragonRank = {}
local this = LuaGreenDragonRank

function LuaGreenDragonRank.CloseUI()
    -- body
    m_isVisible = false
    m_Go:SetActive(false)
end

function LuaGreenDragonRank.OnRankBack(data,length)
	local  msg = ParseProtoBufToTable("QueryRankListLuaRes",data)
	if msg ~= nil then

		print("errorcode is: "..tostring(msg.errorcode))
		if msg.errorcode ~= 0 then
			-- exclude INVALID_REQUEST
			if msg.errorCode ~= ERR_UNKNOWN then
				Hotfix.LuaShowSystemTipErrCode(msg.errorcode)
			end
			return
		end
	else
		print("RankList msg is nil")
		return
	end

	m_rankDataTab = {}
	for i = 1,#msg.ranklist.rankdata  do
		m_rankDataTab[i] = this.SetRankData(msg.ranklist.rankdata[i],i)
    end
    
    if m_rankDataTab == nil then return end
    
    local data = msg.rolerankdata
	if data == nil then return end
	-- print("LuaGreenDragonRank.OnRankBack data.rank is "..data.rank.." "..data.rolename.." "..data.total_num)

	local count = #m_rankDataTab
	print("count = "..tostring(count))
    if count == 0 then
        m_noTipsGo:SetActive(true)
		m_scrollView.gameObject:SetActive(false)
    else
        m_noTipsGo:SetActive(false)
		m_scrollView.gameObject:SetActive(true)

		if not IsNil(m_wrapContentGo) then
			Hotfix.SetWrapContentCount(m_wrapContentGo, count, true)
		end
	end
end
function LuaGreenDragonRank.Refresh()
    this.ReqRank(71)
end
function LuaGreenDragonRank.ReqRank(type)
	local  msg = GetProtoBufSendTable("QueryRankListLuaArg")
	msg.rankType = type
	print("send request msg: "..msg.rankType)

	local pb_data = msg:SerializeToString()
	pb_data = pb_data
	if pb_data ~= nil then
		Hotfix.SendLuaByteRPC(9895, pb_data, this.OnRankBack, this.OnErr)
	else
		print("test proto data is nil")
	end
end
function LuaGreenDragonRank.OnErr()

end
function LuaGreenDragonRank.SetRankData(severData,rank)
	local tab = {}
    tab.riftfloor = severData.riftfloor
    tab.names = severData.rolenames
    tab.times = severData.time
    tab.rank = rank
	return tab
end

function LuaGreenDragonRank.GetRankRow(type,rank)
	return Hotfix.CallDocumentMethod("XAnniversaryTreasureDocument",true,"GetTreasueRankReward",type,rank)
end

--------------------------------------------------------------UI----------------------------------------------------------

function LuaGreenDragonRank.Init()
    m_scrollView = m_Go.transform:Find("Panel"):GetComponent("UIScrollView")
    m_wrapContent = m_Go.transform:Find("Panel/FourNameList"):GetComponent("UIWrapContent")
    m_noTipsGo = m_Go.transform:Find("Tips").gameObject
	m_wrapContentGo = m_wrapContent.gameObject
    Hotfix.InitWrapContent(m_wrapContentGo, this.WrapContentRankUpdated)
end


---@param t UnityEngine.Transform
function LuaGreenDragonRank.WrapContentRankUpdated(t,index)
	print('index = '..tostring(index))
	if index + 1 > #m_rankDataTab then
		print("<color=Red> the index had out of tab Count index+1 = "
				..tostring(index + 1).."  count = "..tostring(#m_rankDataTab).."</color>")
		return
	end

	this.FillSingleWrap(t,index + 1)
end

function LuaGreenDragonRank.FillSingleWrap(tra,index)

	if IsNil(tra) then return end

	print("index oo = "..index)
	print("count = "..#m_rankDataTab)
	local data = m_rankDataTab[index]
	if data == nil then return end

	
	this.SetRank(data.rank,tra)
    this.Setinfo(data.names,data.times,tra,data.riftfloor)
    this.SetReward(tra,data.rank)
end

function LuaGreenDragonRank.DrawItem(go,id,num)
	Hotfix.DrawItemView(go,id,num,false)
	local icon = go.transform:Find("Icon"):GetComponent("UISprite")
	icon.sid = tostring(id)
	Hotfix.SetClickCallback(icon.gameObject,this.OnClickItem)
end
function LuaGreenDragonRank.OnClickItem(go)
	local spr = go.transform:GetComponent("UISprite")
	print("sid = "..tostring(spr.sid))
	Hotfix.LuaShowItemTooltipDialog(tonumber(spr.sid), go)
end

function LuaGreenDragonRank.SetRank(rank,tra)
	local spr = tra:Find("RankImage"):GetComponent("UISprite")
	local lab = tra:Find("Rank"):GetComponent("UILabel")

	spr.gameObject:SetActive(false)
	lab.gameObject:SetActive(false)

	local rankNum = tonumber(rank)
	print("rank = "..rank)
	if rankNum == 1 then
		spr.gameObject:SetActive(true)
		spr.spriteName = "N1"
	elseif rankNum == 2 then
		spr.gameObject:SetActive(true)
		spr.spriteName = "N2"
	elseif rankNum == 3 then
		spr.gameObject:SetActive(true)
		spr.spriteName = "N3"
	elseif rankNum == 4294967295 then
		lab.gameObject:SetActive(true)
		lab.text = "未上榜"
	else
		lab.gameObject:SetActive(true)
		lab.text = rank
	end
end

function LuaGreenDragonRank.Setinfo(name,times,tra,riftfloor)
	local TimeLab = tra:Find("Time"):GetComponent("UILabel")
	local TimeDiff = tra:Find("Diff"):GetComponent("UILabel")
	TimeLab.text = tostring(this.changetotime(times))
	if riftfloor == 71 then
		TimeDiff.text = "地狱难度"
	else 
		TimeDiff.text = "噩梦难度"
	end
	for i = 1,#name do
		local _name = tra:Find("Labs/"..tostring(i-1)):GetComponent("UILabel")
		_name.text = name[i]
	end
	for i = #name+1,6 do
		local _name = tra:Find("Labs/"..tostring(i-1)):GetComponent("UILabel")
		_name.text = ""
	end
end
function LuaGreenDragonRank.changetotime(t)
	t = tonumber(t)
    return tostring(math.floor(t/60)).."分"..tostring(t%60).."秒"
end
function LuaGreenDragonRank.SetReward(tra,index)
    local items = {}
    items[1] = tra:Find("Items/ItemTpl").gameObject
	items[2] = tra:Find("Items/ItemTpl1").gameObject
    items[3] = tra:Find("Items/ItemTpl2").gameObject
    items[1]:SetActive(false)
	items[2]:SetActive(false)
	items[3]:SetActive(false)
	
	if index == 4294967295 then return end
    local row = this.GetRankRow(12,index)
    if row == nil then return end
    for i = 1, row.reward.Count do
        items[i]:SetActive(true)
        id = Hotfix.ParseUIntSeqList(row.reward,i-1,0)
		num = Hotfix.ParseUIntSeqList(row.reward,i-1,1)
		this.DrawItem(items[i],id,num)
    end
end

--------------------------------------------------------------Mono 生命周期------------------------------------------------

function LuaGreenDragonRank.Awake(go)
    -- body
    m_Go = go
    local m_btnClose = go.transform:Find("Close"):GetComponent("XUIButton")
    Hotfix.SetClickCallback(m_btnClose.gameObject,this.CloseUI)
    this.Init()
end

function LuaGreenDragonRank.Start()
    -- body
end

function LuaGreenDragonRank.OnEnable()
	print("LuaGreenDragonRank vis true")
	m_isVisible = true
end

function LuaGreenDragonRank.OnDisable()
	print("LuaGreenDragonRank vis false")
	m_isVisible = false
end

function LuaGreenDragonRank.OnDestroy()
	print("LuaGreenDragonRank vis false")
	m_isVisible = false
end

function LuaGreenDragonRank.OnShow()
    print("LuaGreenDragonRank Refresh start!")
    this.Refresh()
end
function LuaGreenDragonRank.OnHide()
	print("LuaGreenDragonRank vis false")
	m_isVisible = false
end
function LuaGreenDragonRank.IsVisible()
	return m_isVisible
end
return this
